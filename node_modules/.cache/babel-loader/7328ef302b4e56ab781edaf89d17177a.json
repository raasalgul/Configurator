{"ast":null,"code":"var _jsxFileName = \"Q:\\\\Configurator\\\\Workspace\\\\configuratorV2\\\\src\\\\components\\\\legalEntity\\\\AddressDetails.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Fab from \"@material-ui/core/Fab\";\nimport axios from \"axios\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CardActions, CardHeader } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\" //    alignItems: \"center\",\n    //         height: \"100vh\"\n\n  },\n  button: {\n    margin: theme.spacing.unit,\n    textTransform: \"none\",\n    fontSize: 18,\n    padding: \"6px 12px\",\n    backgroundColor: \"#1C80B5\",\n    justifyContent: \"center\"\n  },\n  label: {\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: \"20px\",\n    margin: theme.spacing.unit * 2,\n    color: \"#1C80B5\"\n  },\n  textField: {\n    backgroundColor: \"#F0F0F0\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: \"18px\",\n    margin: theme.spacing.unit,\n    color: \"#999794\"\n  },\n  addresscard: {\n    height: 900,\n    width: 800\n  },\n  fab: {\n    marginLeft: \"-65px\"\n  },\n  divider: {\n    margin: \"\".concat(theme.spacing.unit * 2, \"px 0\")\n  }\n});\n\nconst mobile_types = [{\n  value: \"Mobile\",\n  label: \"Mobile\"\n}, {\n  value: \"Office\",\n  label: \"Office\"\n}];\n\nclass AddressDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showmobile: false,\n      addresstype: \"\",\n      addressline1: \"\",\n      addressline2: \"\",\n      city: \"\",\n      states: \"\",\n      mtype1: \"Mobile\",\n      mobilenumber1: \"\",\n      mtype2: \"Office\",\n      mobilenumber2: \"\",\n      zip: \"\",\n      email: \"\",\n      website: \"\",\n      addressTypeOption: [],\n      stateCodeOption: []\n    };\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handlemobilechange = () => {\n      const showmobile = this.state.showmobile;\n      this.setState({\n        showmobile: !showmobile\n      });\n    };\n\n    this.handleaddress = () => {\n      //  e.preventDefault();\n      this.props.onAddressChange(this.state);\n      this.setState({\n        addresstype: \"\"\n      });\n      this.setState({\n        addressline1: \"\"\n      });\n      this.setState({\n        addressline2: \"\"\n      });\n      this.setState({\n        city: \"\"\n      });\n      this.setState({\n        states: \"\"\n      });\n      this.setState({\n        mobilenumber1: \"\"\n      });\n      this.setState({\n        mobilenumber2: \"\"\n      });\n      this.setState({\n        zip: \"\"\n      });\n      this.setState({\n        email: \"\"\n      });\n      this.setState({\n        website: \"\"\n      });\n    };\n\n    this.handlemobilevalue = (type, value) => {\n      this.setState({\n        [type]: value\n      }); // const{mobile}=this.state;\n      // mobile.push(value);\n      // this.setState({mobile});\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://10.24.46.202:9091/configurator/getStateCode\").then(res => {\n      const stateCodeOption = res.data;\n      console.log(stateCodeOption);\n      this.setState({\n        stateCodeOption\n      });\n    });\n    axios.get(\"http://10.24.46.202:9091/configurator/getAddressType\").then(res => {\n      const addressTypeOption = res.data;\n      console.log(addressTypeOption);\n      this.setState({\n        addressTypeOption\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const showmobile = this.state.showmobile;\n    return (//\n      React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.addresscard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        classes: {\n          title: classes.label\n        },\n        title: \"Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        className: classes.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        className: classes.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        select: true,\n        id: \"addresstype\",\n        variant: \"outlined\",\n        label: \"Address Type\",\n        className: classes.textField,\n        fullWidth: true,\n        value: this.state.addresstype,\n        onChange: this.handleChange(\"addresstype\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.addressTypeOption.map((addressTypeOption, index) => React.createElement(MenuItem, {\n        key: index,\n        value: addressTypeOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, addressTypeOption)))), React.createElement(Grid, {\n        item: true,\n        xs: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"Addressline1-name\",\n        variant: \"outlined\",\n        placeholder: \"Address Line 1\",\n        className: classes.textField,\n        fullWidth: true,\n        value: this.state.addressline1,\n        onChange: this.handleChange(\"addressline1\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"Addressline2-name\",\n        variant: \"outlined\",\n        placeholder: \"Address Line 2\",\n        className: classes.textField,\n        value: this.state.addressline2,\n        fullWidth: true,\n        onChange: this.handleChange(\"addressline2\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"City\",\n        variant: \"outlined\",\n        placeholder: \"City\",\n        className: classes.textField,\n        value: this.state.city,\n        fullWidth: true,\n        onChange: this.handleChange(\"city\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        select: true,\n        id: \"State\",\n        variant: \"outlined\",\n        placeholder: \"State\",\n        className: classes.textField,\n        fullWidth: true,\n        value: this.state.states,\n        onChange: this.handleChange(\"states\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.state.stateCodeOption.map((stateCodeOption, index) => React.createElement(MenuItem, {\n        key: index,\n        value: stateCodeOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, stateCodeOption)))), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"ZIP\",\n        variant: \"outlined\",\n        placeholder: \"ZIP\",\n        type: \"Number\",\n        fullWidth: true,\n        className: classes.textField,\n        value: this.state.zip,\n        onChange: this.handleChange(\"zip\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        className: classes.mtype,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-select-contacttype\",\n        select: true,\n        className: classes.textField,\n        value: this.state.mtype1,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: this.handleChange(\"mtype1\"),\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, mobile_types.map(option => React.createElement(MenuItem, {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, option.label)))), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        className: classes.mobilenumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"mobilenumber\",\n        variant: \"outlined\",\n        placeholder: \"Mobile Number\",\n        fullWidth: true,\n        className: classes.textField,\n        value: this.state.mobilenumber1,\n        onChange: this.handleChange(\"mobilenumber1\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        className: classes.mtype,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-select-contacttype\",\n        select: true,\n        className: classes.textField,\n        value: this.state.mtype2,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: this.handleChange(\"mtype2\"),\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, mobile_types.map(option => React.createElement(MenuItem, {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, option.label)))), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        className: classes.mobilenumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"mobilenumber\",\n        variant: \"outlined\",\n        placeholder: \"Mobile Number\",\n        fullWidth: true,\n        className: classes.textField,\n        value: this.state.mobilenumber2,\n        onChange: this.handleChange(\"mobilenumber2\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"Email\",\n        variant: \"outlined\",\n        placeholder: \"Email\",\n        type: \"Email\",\n        fullWidth: true,\n        className: classes.textField,\n        value: this.state.email,\n        onChange: this.handleChange(\"email\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"Website\",\n        variant: \"outlined\",\n        placeholder: \"Website\",\n        fullWidth: true,\n        className: classes.textField,\n        value: this.state.website,\n        onChange: this.handleChange(\"website\"),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })))), React.createElement(CardActions, {\n        style: {\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.handleaddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Add Address\")))))\n    );\n  }\n\n}\n\nexport default withStyles(styles)(AddressDetails);","map":{"version":3,"sources":["Q:\\Configurator\\Workspace\\configuratorV2\\src\\components\\legalEntity\\AddressDetails.js"],"names":["React","withStyles","TextField","Grid","Card","Fab","axios","CardContent","CardActions","CardHeader","Divider","DeleteIcon","Button","MenuItem","Tooltip","styles","theme","root","flexGrow","display","justifyContent","button","margin","spacing","unit","textTransform","fontSize","padding","backgroundColor","label","fontFamily","color","textField","addresscard","height","width","fab","marginLeft","divider","mobile_types","value","AddressDetails","Component","constructor","props","state","showmobile","addresstype","addressline1","addressline2","city","states","mtype1","mobilenumber1","mtype2","mobilenumber2","zip","email","website","addressTypeOption","stateCodeOption","handleChange","prop","event","setState","target","handlemobilechange","handleaddress","onAddressChange","handlemobilevalue","type","componentDidMount","get","then","res","data","console","log","render","classes","title","map","index","mtype","MenuProps","className","menu","option","mobilenumber"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport axios from \"axios\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { CardActions, CardHeader } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n    //    alignItems: \"center\",\r\n    //         height: \"100vh\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    textTransform: \"none\",\r\n    fontSize: 18,\r\n    padding: \"6px 12px\",\r\n    backgroundColor: \"#1C80B5\",\r\n    justifyContent: \"center\"\r\n  },\r\n  label: {\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize: \"20px\",\r\n    margin: theme.spacing.unit * 2,\r\n    color: \"#1C80B5\"\r\n  },\r\n  textField: {\r\n    backgroundColor: \"#F0F0F0\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize: \"18px\",\r\n    margin: theme.spacing.unit,\r\n    color: \"#999794\"\r\n  },\r\n  addresscard: {\r\n    height: 900,\r\n    width: 800\r\n  },\r\n  fab: {\r\n    marginLeft: \"-65px\"\r\n  },\r\n\r\n  divider: {\r\n    margin: `${theme.spacing.unit * 2}px 0`\r\n  }\r\n});\r\nconst mobile_types = [\r\n  {\r\n    value: \"Mobile\",\r\n    label: \"Mobile\"\r\n  },\r\n  {\r\n    value: \"Office\",\r\n    label: \"Office\"\r\n  }\r\n];\r\n\r\nclass AddressDetails extends React.Component {\r\n  state = {\r\n    showmobile: false,\r\n    addresstype: \"\",\r\n    addressline1: \"\",\r\n    addressline2: \"\",\r\n    city: \"\",\r\n    states: \"\",\r\n    mtype1: \"Mobile\",\r\n    mobilenumber1: \"\",\r\n    mtype2: \"Office\",\r\n    mobilenumber2: \"\",\r\n    zip: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    addressTypeOption: [],\r\n    stateCodeOption: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`http://10.24.46.202:9091/configurator/getStateCode`)\r\n      .then(res => {\r\n        const stateCodeOption = res.data;\r\n        console.log(stateCodeOption);\r\n        this.setState({ stateCodeOption });\r\n      });\r\n    axios\r\n      .get(`http://10.24.46.202:9091/configurator/getAddressType`)\r\n      .then(res => {\r\n        const addressTypeOption = res.data;\r\n        console.log(addressTypeOption);\r\n        this.setState({ addressTypeOption });\r\n      });\r\n  }\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n  handlemobilechange = () => {\r\n    const { showmobile } = this.state;\r\n    this.setState({ showmobile: !showmobile });\r\n  };\r\n  handleaddress = () => {\r\n    //  e.preventDefault();\r\n    this.props.onAddressChange(this.state);\r\n    this.setState({ addresstype: \"\" });\r\n    this.setState({ addressline1: \"\" });\r\n\r\n    this.setState({ addressline2: \"\" });\r\n    this.setState({ city: \"\" });\r\n    this.setState({ states: \"\" });\r\n    this.setState({ mobilenumber1: \"\" });\r\n    this.setState({ mobilenumber2: \"\" });\r\n    this.setState({ zip: \"\" });\r\n    this.setState({ email: \"\" });\r\n    this.setState({ website: \"\" });\r\n  };\r\n\r\n  handlemobilevalue = (type, value) => {\r\n    this.setState({ [type]: value });\r\n    // const{mobile}=this.state;\r\n    // mobile.push(value);\r\n    // this.setState({mobile});\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { showmobile } = this.state;\r\n    return (\r\n      //\r\n      <div className={classes.root}>\r\n        <Card className={classes.addresscard}>\r\n          <CardHeader classes={{ title: classes.label }} title=\"Address\" />\r\n          <Divider className={classes.divider} />\r\n          <CardContent>\r\n            <Grid container spacing={24} className={classes.label}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  select\r\n                  id=\"addresstype\"\r\n                  variant=\"outlined\"\r\n                  label=\"Address Type\"\r\n                  className={classes.textField}\r\n                  fullWidth\r\n                  value={this.state.addresstype}\r\n                  onChange={this.handleChange(\"addresstype\")}\r\n                  margin=\"normal\"\r\n                >\r\n                  {this.state.addressTypeOption.map(\r\n                    (addressTypeOption, index) => (\r\n                      <MenuItem key={index} value={addressTypeOption}>\r\n                        {addressTypeOption}\r\n                      </MenuItem>\r\n                    )\r\n                  )}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={7}>\r\n                <TextField\r\n                  id=\"Addressline1-name\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Address Line 1\"\r\n                  className={classes.textField}\r\n                  fullWidth\r\n                  value={this.state.addressline1}\r\n                  onChange={this.handleChange(\"addressline1\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  id=\"Addressline2-name\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Address Line 2\"\r\n                  className={classes.textField}\r\n                  value={this.state.addressline2}\r\n                  fullWidth\r\n                  onChange={this.handleChange(\"addressline2\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  id=\"City\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"City\"\r\n                  className={classes.textField}\r\n                  value={this.state.city}\r\n                  fullWidth\r\n                  onChange={this.handleChange(\"city\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  select\r\n                  id=\"State\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"State\"\r\n                  className={classes.textField}\r\n                  fullWidth\r\n                  value={this.state.states}\r\n                  onChange={this.handleChange(\"states\")}\r\n                  margin=\"normal\"\r\n                >\r\n                  {this.state.stateCodeOption.map((stateCodeOption, index) => (\r\n                    <MenuItem key={index} value={stateCodeOption}>\r\n                      {stateCodeOption}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  id=\"ZIP\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"ZIP\"\r\n                  type=\"Number\"\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  value={this.state.zip}\r\n                  onChange={this.handleChange(\"zip\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              {/* <Mobile mobilevalue={this.handlemobilevalue}/>\r\n    <Grid item xs={1}>\r\n    {!showmobile && <Fab color=\"primary\"   disabled={showmobile} onClick={this.handlemobilechange} aria-label=\"Add\" className={classes.fab}>\r\n        <AddIcon />              \r\n     </Fab>}\r\n     {showmobile && <Fab color=\"primary\"   disabled={!showmobile} onClick={this.handlemobilechange} aria-label=\"Add\" className={classes.fab}>\r\n        <DeleteIcon />              \r\n     </Fab>}\r\n    </Grid> */}\r\n              {/* <Grid item xs={12}> */}\r\n              <Grid item xs={3} className={classes.mtype}>\r\n                <TextField\r\n                  id=\"standard-select-contacttype\"\r\n                  select\r\n                  className={classes.textField}\r\n                  value={this.state.mtype1}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={this.handleChange(\"mtype1\")}\r\n                  SelectProps={{\r\n                    MenuProps: {\r\n                      className: classes.menu\r\n                    }\r\n                  }}\r\n                >\r\n                  {mobile_types.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={8} className={classes.mobilenumber}>\r\n                <TextField\r\n                  id=\"mobilenumber\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Mobile Number\"\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  value={this.state.mobilenumber1}\r\n                  onChange={this.handleChange(\"mobilenumber1\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} className={classes.mtype}>\r\n                <TextField\r\n                  id=\"standard-select-contacttype\"\r\n                  select\r\n                  className={classes.textField}\r\n                  value={this.state.mtype2}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={this.handleChange(\"mtype2\")}\r\n                  SelectProps={{\r\n                    MenuProps: {\r\n                      className: classes.menu\r\n                    }\r\n                  }}\r\n                >\r\n                  {mobile_types.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={8} className={classes.mobilenumber}>\r\n                <TextField\r\n                  id=\"mobilenumber\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Mobile Number\"\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  value={this.state.mobilenumber2}\r\n                  onChange={this.handleChange(\"mobilenumber2\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              {/* {showmobile && <Mobile/>} */}\r\n              {/* </Grid>    */}\r\n\r\n              <Grid item xs={7}>\r\n                <TextField\r\n                  id=\"Email\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Email\"\r\n                  type=\"Email\"\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange(\"email\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  id=\"Website\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Website\"\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  value={this.state.website}\r\n                  onChange={this.handleChange(\"website\")}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions style={{ justifyContent: \"center\" }}>\r\n            <Grid item xs={11}>\r\n              {/* { this.props.status && */}\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={this.handleaddress}\r\n              >\r\n                Add Address\r\n              </Button>\r\n              {/* }  onClick={this.props.event} */}\r\n              {/* { !this.props.status &&\r\n    <Button  fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.props.event}>\r\n        Delete Address\r\n      </Button>} */}\r\n            </Grid>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AddressDetails);\r\n"]},"metadata":{},"sourceType":"module"}