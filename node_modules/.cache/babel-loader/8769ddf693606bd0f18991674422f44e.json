{"ast":null,"code":"var _jsxFileName = \"Q:\\\\Configurator\\\\Workspace\\\\configuratorV2\\\\src\\\\components\\\\Configurator\\\\StatesOffExchange.js\";\nimport React from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CardHeader } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  HPSBlue: {\n    backgroundColor: \"#1C80B5\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: \"18px\",\n    margin: theme.spacing.unit,\n    color: \"#FFFFF\"\n  },\n  HPSYellow: {\n    backgroundColor: \"#F9AA1F\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: \"18px\",\n    margin: theme.spacing.unit,\n    color: \"#FFFFF\"\n  },\n  defaultcolor: {\n    backgroundColor: \"#F0F0F0\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: \"18px\",\n    margin: theme.spacing.unit,\n    color: \"#999794\"\n  },\n  clearButton: {\n    margin: theme.spacing.unit * 2,\n    width: 200,\n    height: 50,\n    fontSize: \"14px\"\n  },\n  button: {\n    margin: theme.spacing.unit,\n    textTransform: \"none\",\n    fontSize: 18,\n    padding: \"6px 12px\",\n    backgroundColor: \"#05EDF8\",\n    justifyContent: \"center\"\n  },\n  label: {\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: \"20px\",\n    margin: theme.spacing.unit * 2,\n    color: \"#1C80B5\"\n  },\n  card: {\n    maxWidth: 1080\n  }\n});\n\nclass StatesOffExchange extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      state_option: [],\n      carrier_name: \"\",\n      business_sub_type: \"off_exchange\",\n      business_type: \"\",\n      carrierStateType: [],\n      states: []\n    };\n\n    this.handleChange = () => {\n      const _this$state = this.state,\n            carrier_name = _this$state.carrier_name,\n            business_type = _this$state.business_type,\n            business_sub_type = _this$state.business_sub_type,\n            states = _this$state.states;\n      const post = {\n        carrier_name: \"Liberty\",\n        carrierStateType: [{\n          business_type: \"individual\",\n          business_sub_type: \"off_exchange\",\n          states\n        }]\n      };\n      console.log(JSON.stringify(post));\n      fetch(\"http://localhost:9091/StateAPI/addStates/\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n      }).then(res => res.json()).then(data => console.log(data)); // this.props.history.push(``);\n\n      console.log({\n        post\n      });\n    };\n\n    this.handleaddstates = event => {\n      const states = this.state.states;\n      var values = event.currentTarget.attributes.statevalue.nodeValue;\n      console.log(event.currentTarget);\n      var myBoolean = states.includes(values);\n\n      if (myBoolean) {\n        var index = states.indexOf(values);\n        if (index !== -1) states.splice(index, 1);\n      } else {\n        states.push(values);\n      }\n\n      this.setState({\n        states\n      });\n    };\n\n    this.handleremoveallStates = () => {\n      const states = this.state.states;\n      states.splice(0, states.length);\n      this.setState({\n        states\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://10.24.46.59:9091/StateAPI/allStates\").then(res => {\n      const state_option = res.data;\n      console.log(state_option);\n      this.setState({\n        state_option\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          state_option = _this$state2.state_option,\n          states = _this$state2.states;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"70vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      classes: {\n        title: classes.label\n      },\n      title: \"States the service available OFF exchange for individual\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, state_option.map((option, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Button, {\n      key: index,\n      statevalue: option,\n      className: states.includes(option) ? classes.HPSBlue : classes.defaultcolor,\n      onClick: this.handleaddstates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, option))))))), React.createElement(Button, {\n      className: classes.clearButton,\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: this.handleremoveallStates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Clear All\"), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nexport default withStyles(styles)(StatesOffExchange);","map":{"version":3,"sources":["Q:\\Configurator\\Workspace\\configuratorV2\\src\\components\\Configurator\\StatesOffExchange.js"],"names":["React","Fab","Card","CardContent","CardHeader","Divider","withStyles","Grid","connect","axios","Button","styles","theme","HPSBlue","backgroundColor","fontFamily","fontSize","margin","spacing","unit","color","HPSYellow","defaultcolor","clearButton","width","height","button","textTransform","padding","justifyContent","label","card","maxWidth","StatesOffExchange","Component","state","state_option","carrier_name","business_sub_type","business_type","carrierStateType","states","handleChange","post","console","log","JSON","stringify","fetch","method","headers","body","then","res","json","data","handleaddstates","event","values","currentTarget","attributes","statevalue","nodeValue","myBoolean","includes","index","indexOf","splice","push","setState","handleremoveallStates","length","componentDidMount","get","render","classes","props","root","display","alignItems","title","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { CardHeader } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n  HPSBlue: {\r\n    backgroundColor: \"#1C80B5\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize: \"18px\",\r\n    margin: theme.spacing.unit,\r\n    color: \"#FFFFF\"\r\n  },\r\n  HPSYellow: {\r\n    backgroundColor: \"#F9AA1F\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize: \"18px\",\r\n    margin: theme.spacing.unit,\r\n    color: \"#FFFFF\"\r\n  },\r\n  defaultcolor: {\r\n    backgroundColor: \"#F0F0F0\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize: \"18px\",\r\n    margin: theme.spacing.unit,\r\n    color: \"#999794\"\r\n  },\r\n  clearButton: {\r\n    margin: theme.spacing.unit * 2,\r\n    width: 200,\r\n    height: 50,\r\n    fontSize: \"14px\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    textTransform: \"none\",\r\n    fontSize: 18,\r\n    padding: \"6px 12px\",\r\n    backgroundColor: \"#05EDF8\",\r\n    justifyContent: \"center\"\r\n  },\r\n  label: {\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize: \"20px\",\r\n    margin: theme.spacing.unit * 2,\r\n    color: \"#1C80B5\"\r\n  },\r\n  card: {\r\n    maxWidth: 1080\r\n  }\r\n});\r\nclass StatesOffExchange extends React.Component {\r\n  state = {\r\n    state_option: [],\r\n\r\n    carrier_name: \"\",\r\n    business_sub_type: \"off_exchange\",\r\n    business_type: \"\",\r\n    carrierStateType: [],\r\n    states: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://10.24.46.59:9091/StateAPI/allStates`).then(res => {\r\n      const state_option = res.data;\r\n      console.log(state_option);\r\n      this.setState({ state_option });\r\n    });\r\n  }\r\n  handleChange = () => {\r\n    const {\r\n      carrier_name,\r\n      business_type,\r\n      business_sub_type,\r\n      states\r\n    } = this.state;\r\n\r\n    const post = {\r\n      carrier_name: \"Liberty\",\r\n      carrierStateType: [\r\n        {\r\n          business_type: \"individual\",\r\n          business_sub_type: \"off_exchange\",\r\n          states\r\n        }\r\n      ]\r\n    };\r\n    console.log(JSON.stringify(post));\r\n    fetch(`http://localhost:9091/StateAPI/addStates/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(post)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => console.log(data));\r\n    // this.props.history.push(``);\r\n    console.log({ post });\r\n  };\r\n  handleaddstates = event => {\r\n    const { states } = this.state;\r\n    var values = event.currentTarget.attributes.statevalue.nodeValue;\r\n    console.log(event.currentTarget);\r\n    var myBoolean = states.includes(values);\r\n    if (myBoolean) {\r\n      var index = states.indexOf(values);\r\n      if (index !== -1) states.splice(index, 1);\r\n    } else {\r\n      states.push(values);\r\n    }\r\n\r\n    this.setState({ states });\r\n  };\r\n  handleremoveallStates = () => {\r\n    const { states } = this.state;\r\n    states.splice(0, states.length);\r\n    this.setState({ states });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { state_option, states } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classes.root}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"70vh\"\r\n        }}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            classes={{ title: classes.label }}\r\n            title=\"States the service available OFF exchange for individual\"\r\n          />\r\n          <Divider variant=\"middle\" />\r\n          <CardContent>\r\n            <Grid container spacing={24}>\r\n              {state_option.map((option, index) => (\r\n                <div key={index}>\r\n                  <Grid item xs={2}>\r\n                    <Button\r\n                      key={index}\r\n                      statevalue={option}\r\n                      className={\r\n                        states.includes(option)\r\n                          ? classes.HPSBlue\r\n                          : classes.defaultcolor\r\n                      }\r\n                      onClick={this.handleaddstates}\r\n                    >\r\n                      {option}\r\n                    </Button>\r\n                  </Grid>\r\n                </div>\r\n              ))}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Button\r\n          className={classes.clearButton}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={this.handleremoveallStates}\r\n        >\r\n          Clear All\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={this.handleChange}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(StatesOffExchange);\r\n"]},"metadata":{},"sourceType":"module"}